// The purpose
//
// Run the git based git fetching script.
//
// The script will just check for updates and pull them fetching the
// top of the site.

pipeline {
  agent {
    dockerfile {
      label 'debbies'
      args "--network=host"
    }
  }
  parameters {
    booleanParam(
      name: 'REFETCH',
      defaultValue: false,
      description: 'Clone all will remove the stored copy and ' +
        'refetch everything.'
      )
  }
  triggers {
    cron("@daily")
  }
  options {
    timestamps()
  }

  stages {
    stage('clean') {
      when {
        expression { params.REFETCH }
      }
      steps {
        deleteDir()
      }
    }
    stage('Get dgof') {
      steps {
        // Get and/or install dgof into the workspace
        // Commands using dgof will need $(pwd)/dgof to be added to the PATH
        timeout(100) {
          sh '''
            if git clone http://localhost:8888/freenet:USK@nrDOd1piehaN7z7s~~IYwH-2eK7gcQ9wAtPMxD8xPEs,y61pkcoRy-ccB7BHvLCzt3RUjeMILf8ox26NKvPZ-jk,AQACAAE/dgof/26/ dgof 2> gitclone.out
            then
              cat gitclone.out 1>&2
            else
              cp gitclone.out newusk
              sed -i '$s/.*USK@/USK@/p;d' newusk
              sed -i 's,\\(/dgof/[0-9]*/\\).*,\\1,' newusk
              git clone http://localhost:8888/freenet:$(cat newusk) dgof
	      curl $(cat newusk)fetch_all_setup.sh > fetch_all_setup.sh
              chmod +x fetch_all_setup.sh
            fi
            '''
        }
      }
    }
    stage('fetch') {
      steps {
        sh "./fetch_all_setup.sh"
        sh "git -C all fetch --all"
        sh "git -C all gc --prune=all"
      }
    }
  }
}
